import { canvasConfig, solarSystem } from './global.js';
import CanvasUtils from '../scripts/canvas.js';
import Fullscreen from '../scripts/fullscreen.js';
import CelestialBody from './celestialBody.js';

// Celestial bodies array (as defined previously)
const celestialBodies = [
  new CelestialBody("Sun", solarSystem.sunRadius, 0, "yellow", 0, 0),
  new CelestialBody("Mercury", 3, 50, "gray", Math.random() * Math.PI * 2, 0.02, [
      { radius: 0.5, distance: 5, angle: Math.random() * Math.PI * 2, speed: 0.05 }
  ]),
  new CelestialBody("Venus", 5, 75, "orange", Math.random() * Math.PI * 2, 0.015, [
      { radius: 1, distance: 10, angle: Math.random() * Math.PI * 2, speed: 0.03 }
  ]),
  new CelestialBody("Earth", 6, 115, "blue", Math.random() * Math.PI * 2, 0.01, [
      { radius: 1.5, distance: 12, angle: Math.random() * Math.PI * 2, speed: 0.02 }
  ]),
  new CelestialBody("Mars", 5, 150, "red", Math.random() * Math.PI * 2, 0.008, [
      { radius: 0.8, distance: 10, angle: Math.random() * Math.PI * 2, speed: 0.025 },
      { radius: 0.5, distance: 3, angle: Math.random() * Math.PI * 2, speed: 0.04 }
  ]),
  new CelestialBody("Jupiter", 15, 200, "orange", Math.random() * Math.PI * 2, 0.005, [
      { radius: 2.5, distance: 28, angle: Math.random() * Math.PI * 2, speed: 0.015 },
      { radius: 2, distance: 23, angle: Math.random() * Math.PI * 2, speed: 0.02 },
      { radius: 1.5, distance: 18, angle: Math.random() * Math.PI * 2, speed: 0.03 }
  ]),
  new CelestialBody("Saturn", 12, 260, "gold", Math.random() * Math.PI * 2, 0.003, [
      { radius: 2, distance: 20, angle: Math.random() * Math.PI * 2, speed: 0.01 },
      { radius: 1.5, distance: 17, angle: Math.random() * Math.PI * 2, speed: 0.015 },
      { radius: 1, distance: 15, angle: Math.random() * Math.PI * 2, speed: 0.02 }
  ], { outerRadius: 21, innerRadius: 14, color: "rgba(220, 220, 220, 0.5)" }),
  new CelestialBody("Uranus", 8, 310, "lightblue", Math.random() * Math.PI * 2, 0.002, [
      { radius: 1.2, distance: 18, angle: Math.random() * Math.PI * 2, speed: 0.01 },
      { radius: 0.8, distance: 14, angle: Math.random() * Math.PI * 2, speed: 0.015 }
  ], { outerRadius: 14, innerRadius: 10, color: "rgba(150, 170, 190, 0.5)" }),
  new CelestialBody("Neptune", 8, 370, "blue", Math.random() * Math.PI * 2, 0.001, [
      { radius: 1, distance: 22, angle: Math.random() * Math.PI * 2, speed: 0.01 },
      { radius: 0.7, distance: 18, angle: Math.random() * Math.PI * 2, speed: 0.02 }
  ], { outerRadius: 14, innerRadius: 10, color: "rgba(100, 120, 140, 0.5)" }),
];


// Game loop function
export function gameLoop(ctx, deltaTime) {
    // Clear the canvas
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    // Update and draw each celestial body
    celestialBodies.forEach(body => {
        body.update(deltaTime); // Update position based on velocity and orbital movement
        body.draw(ctx); // Draw the celestial body on the canvas
    });
}

// To start the game loop, ensure to call this function in the animation frame as shown in canvas.js
// Canvas needs to know the current directory to game.js
const currentDir = window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/'));
window.canvasPath = currentDir;
